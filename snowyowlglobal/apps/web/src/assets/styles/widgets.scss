@import "vars";

.top-gap {
  display:block; margin-bottom:1em;
}

@mixin hostWidthMixin($width) {
  .responsive-container {
      width: $width;
      margin-left: auto;
      margin-right: auto;
  }

}

@media (max-width: 1919px) { //  Small screens, laptops
  @include hostWidthMixin(95%);
}

@media (min-width: 1920px) { // Desktops, large screens
  @include hostWidthMixin(45%);
}  

.action-card-header {
  display: flex;
  align-items: center;
  padding: 10px;
  background: transparent;
  position: relative;
  img {
    width: 25px;
    height: 25px;
  }  
}

// ---- BUTTON ----
button {
  $hoverColor: mix($foregroundColor, $mainColor, 15%);
  $activeColor: mix($foregroundColor, $mainColor, 25%);
  background: $buttonColor;
  border: 0;
  color: $backgroundColor;
  padding: 8px 12px;
  border-radius: 6px;
  outline: none;
  font-size: 15px;
  cursor: pointer;
  transition: background .3s ease;

  &:focus {
    box-shadow: 0 0 2px 1px transparentize($mainColor, .3);
  }

  &:hover {
    background: $hoverColor;
  }

  &:active {
    background: $activeColor;
  }

  &:disabled {
    cursor: auto;
    opacity: .65;
    pointer-events: none;
  }

  &.accent {
    $hoverColor: mix($foregroundColor, $accentColor, 15%);
    $activeColor: mix($foregroundColor, $accentColor, 25%);
    background: $accentColor;
    &:focus {
      box-shadow: 0 0 2px 1px transparentize($accentColor, .3);
    }
    &:hover {
      background: $hoverColor;
    }

    &:active {
      background: $activeColor;
    }
  }

  &.accentGreen {
    $hoverColor: mix($foregroundColor, $accentGreenColor, 15%);
    $activeColor: mix($foregroundColor, $accentGreenColor, 25%);
    background: $accentGreenColor;
    &:focus {
      box-shadow: 0 0 2px 1px transparentize($accentGreenColor, .3);
    }
    &:hover {
      background: $hoverColor;
    }

    &:active {
      background: $activeColor;
    }
  }

  &.light {
    $hoverColor: mix($foregroundColor, #EBEBEB, 15%);
    $activeColor: mix($foregroundColor, #EBEBEB, 25%);
    background: #EBEBEB;
    color: #5a5a5a;
    &:focus {
      box-shadow: 0 0 2px 1px transparentize(#EBEBEB, .3);
    }
    &:hover {
      background: $hoverColor;
    }

    &:active {
      background: $activeColor;
    }
  }
}

//input, select {
//  $placeholder: mix($foregroundColor, $backgroundColor, 30%);
//  background-color: $backgroundColor;
//  border: 1px solid $placeholder;
//  outline: 0;
//  -webkit-tap-highlight-color: transparent;
//  padding: 7px;
//  font-size: 16px;
//  border-radius: 3px;
//  box-sizing: border-box;
//  font-family: $fontFamily;
//  color: $foregroundColor;
//
//  &::-webkit-input-placeholder {
//    color: $placeholder;
//  }
//
//  &:focus, &.focused {
//    border-color: $mainColor;
//    box-shadow: 0 0 3px $mainColor;
//    &::-webkit-input-placeholder {
//      color: mix($foregroundColor, $placeholder, 25%);
//    }
//  }
//
//  &.ng-invalid.ng-touched {
//    border-color: mix($errorColor, $placeholder);
//
//    &::-webkit-input-placeholder {
//      color: mix($errorColor, $placeholder, 40%);
//    }
//
//    &:focus::-webkit-input-placeholder {
//      color: mix($errorColor, $placeholder, 65%);
//    }
//
//    &:focus {
//      box-shadow: 0 0 3px $errorColor;
//    }
//  }
//}

.questionMark {
  background: mix($foregroundColor, $backgroundColor, 10%);
  padding: 8px;
  border-radius: 50%;
  width: .75em;
  height: .75em;
  line-height: .75em;
  display: inline-block;
  text-align: center;
  cursor: pointer;
  font-weight: 700;
  margin-right: 5px;
  &:hover {
    background: mix($foregroundColor, $backgroundColor, 16%)
  }
  &:active {
    background: mix($foregroundColor, $backgroundColor, 20%)
  }
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.buttonBar {
  background: mix($backgroundColor, $mainColor, 15%);
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-radius: 6px;
  color: $backgroundColor;

  &.light {
    background: mix($foregroundColor, $backgroundColor, 15%);
    color: $foregroundColor;
  }
}

.form {
  margin-top: 10px;
  background: #fff;
  border-left: 0;
  border-right: 0;
  padding-left: 10px;

  .field-label {
    display:block;
    float:left;
    margin-bottom: 0.5em;    
  }
  input, .item {
    border: 1px solid $formBorderColor;
    display: block;
    width: 100%;
    padding: 10px;
    border-radius: 0;    
    box-sizing: border-box;
    font-size: 16px;
    outline: none;
    margin-bottom: 1em;
    border-radius: 10px;
    color: #518cd7;
    &.ng-invalid.ng-touched, &.invalid {
      background: transparentize($errorColor, .8);
      box-shadow: none;
    }
    &:focus {
      box-shadow: none;
    }
    &.last {
      border-bottom: none;
    }
  }

  .item {
    display: flex;
    justify-content: space-between;
  }

  fa-icon {
    color: $formBorderColor;
  }
}

.headerLeft fa-icon {
  margin-right: 3px;
  vertical-align: middle;
  font-size: 15px;
}

.headerTitle {
  font-size: 20px;
}

.vxDialog .content {
  transition: width .3s ease, height .3s ease;
  overflow: hidden;
  max-height: 95vh;
}

.fadeIn {
  opacity: 0;
  animation: fade-in .3s ease;
  animation-fill-mode: forwards;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.slideInLeft {
  transform: translateX(-120%);
  animation: slide-in-left .3s ease;
  animation-fill-mode: forwards;
}
.slideInRight {
  transform: translateX(120%);
  animation: slide-in-right .3s ease;
  animation-fill-mode: forwards;
}

@keyframes slide-in-left {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slide-in-right {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

.link {
  color: $mainColor;
  text-decoration: underline;
  cursor: pointer;
}
